"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[844],{3680:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var o=t(4848),i=t(8453);const s={title:"Debugging",description:"How to access debug logs"},c=void 0,d={id:"debugging",title:"Debugging",description:"How to access debug logs",source:"@site/../docs/debugging.md",sourceDirName:".",slug:"/debugging",permalink:"/docs/oclif/docs/debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/debugging.md",tags:[],version:"current",lastUpdatedBy:"Mike Donnalley",lastUpdatedAt:1711731567e3,frontMatter:{title:"Debugging",description:"How to access debug logs"},sidebar:"docs",previous:{title:"Configuring Your CLI",permalink:"/docs/oclif/docs/configuring_your_cli"},next:{title:"Error Handling",permalink:"/docs/oclif/docs/error_handling"}},r={},u=[];function g(e){const n={a:"a",code:"code",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.a,{href:"https://github.com/visionmedia/debug",children:"debug"})," for debugging. The CLI uses this module for all of its debugging. If you set the environment variable ",(0,o.jsx)(n.code,{children:"DEBUG=*"})," it will print all the debug output to the screen."]}),"\n",(0,o.jsxs)(n.p,{children:["Depending on your shell you may need to escape this with ",(0,o.jsx)(n.code,{children:"DEBUG=\\*"}),". On Windows you can't set environment variables in line, so you'll need to run ",(0,o.jsx)(n.code,{children:"set DEBUG=*"})," before running the command."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"debug demo",src:t(6608).A+"",width:"2658",height:"1250"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},6608:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/debug_demo-efc07abda59d2b82da3fc695b96596c8.png"},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var o=t(6540);const i={},s=o.createContext(i);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);