"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8196],{8366:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var l=r(4848),a=r(8453);const s={title:"\u547d\u4ee4\u6807\u5fd7"},t=void 0,o={id:"flags",title:"\u547d\u4ee4\u6807\u5fd7",description:"\u6807\u5fd7\u9009\u9879\u662f\u4f20\u9012\u7ed9\u547d\u4ee4\u7684\u975e\u4f4d\u7f6e\u53c2\u6570\u3002\u6807\u5fd7\u53ef\u4ee5\u662f\u5e26\u53c2\u6570\u7684\u9009\u9879\u6807\u5fd7\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u5e26\u53c2\u6570\u7684\u5e03\u5c14\u6807\u5fd7\u3002\u9009\u9879\u6807\u5fd7\u5fc5\u987b\u6709\u53c2\u6570\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/flags.md",sourceDirName:".",slug:"/flags",permalink:"/docs/oclif/zh/docs/flags",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/flags.md",tags:[],version:"current",lastUpdatedBy:"CosmoLau",lastUpdatedAt:1713160487e3,frontMatter:{title:"\u547d\u4ee4\u6807\u5fd7"},sidebar:"docs",previous:{title:"\u547d\u4ee4\u53c2\u6570",permalink:"/docs/oclif/zh/docs/args"},next:{title:"\u914d\u7f6e",permalink:"/docs/oclif/zh/docs/config"}},i={},c=[{value:"\u81ea\u5b9a\u4e49\u6807\u5fd7",id:"\u81ea\u5b9a\u4e49\u6807\u5fd7",level:2},{value:"\u53ef\u9009\u6807\u5fd7\u8f93\u5165",id:"\u53ef\u9009\u6807\u5fd7\u8f93\u5165",level:2}];function f(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"\u6807\u5fd7\u9009\u9879\u662f\u4f20\u9012\u7ed9\u547d\u4ee4\u7684\u975e\u4f4d\u7f6e\u53c2\u6570\u3002\u6807\u5fd7\u53ef\u4ee5\u662f\u5e26\u53c2\u6570\u7684\u9009\u9879\u6807\u5fd7\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u5e26\u53c2\u6570\u7684\u5e03\u5c14\u6807\u5fd7\u3002\u9009\u9879\u6807\u5fd7\u5fc5\u987b\u6709\u53c2\u6570\u3002"}),"\n",(0,l.jsx)(n.p,{children:"\u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u547d\u4ee4\u50cf\u8fd9\u6837\u8fd0\u884c\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"$ mycli --force --file=./myfile\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u5b83\u5c06\u88ab\u58f0\u660e\u4e3a\u8fd9\u6837\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import {Command, Flags} from '@oclif/core'\r\n\r\nexport class MyCLI extends Command {\r\n  static flags = {\r\n    // --force \u6216 -f \u90fd\u80fd\u901a\u8fc7\r\n    force: Flags.boolean({char: 'f'}),\r\n    file: Flags.string(),\r\n  }\r\n\r\n  async run() {\r\n    const {flags} = await this.parse(MyCLI)\r\n    if (flags.force) console.log('--force is set')\r\n    if (flags.file) console.log(`--file is: ${flags.file}`)\r\n  }\r\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.em,{children:["oclif \u652f\u6301\u5927\u8303\u56f4\u7684",(0,l.jsx)(n.a,{href:"#%E5%8F%AF%E9%80%89%E6%A0%87%E5%BF%97%E8%BE%93%E5%85%A5",children:"\u53ef\u9009\u6807\u5fd7\u8f93\u5165"}),"\u3002"]})}),"\n",(0,l.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u6807\u5fd7\u53ef\u4ee5\u5177\u6709\u7684\u9009\u9879\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"static flags = {\r\n  name: Flags.string({\r\n    // The following can be set on both boolean and option flag (e.g. string, integer, url, custom, etc) types.\r\n    char: 'n',                                   // shorter flag version\r\n    summary: 'brief summary',                    // help summary for flag\r\n    helpLabel: '--my-flags',                     // The flag label to show in help. Defaults to \"[-<char>] --<name>\" where -<char> is only displayed if the char is defined.\r\n    helpGroup: 'THE BEST FLAGS',                 // Put flag into THE BEST FLAGS group in help\r\n    description: 'in-depth overview',            // help description for flag\r\n    hidden: false,                               // hide from help\r\n    multiple: false,                             // allow setting this flag multiple times\r\n    env: 'MY_NAME',                              // default to value of environment variable\r\n    options: ['a', 'b'],                         // only allow the value to be from a discrete set\r\n    parse: async input => 'output',              // instead of the user input, return a different value\r\n    default: 'world',                            // default value if flag not passed (can be an async function that returns a string or undefined)\r\n    defaultHelp: 'a dynamic value'               // dynamic default value to show in help output (e.g. current working directory). Can be an async function that returns a string or undefined\r\n    required: false,                             // make flag required\r\n    aliases: ['username', 'u'],                  // aliases for the flag - can be short char or long flags\r\n    aliases: ['u', 'n'],                         // single character aliases for the flag\r\n    deprecated: false,                           // mark the flag as deprecated.\r\n    deprecateAliases: false,                     // emit deprecation warning anytime a flag alias is provided\r\n    noCacheDefault: false,                       // if true, the value returned by defaultHelp will not be cached in the oclif.manifest.json.\r\n    dependsOn: ['extra-flag'],                   // this flag requires another flag\r\n    exclusive: ['extra-flag'],                   // this flag cannot be specified alongside this other flag\r\n    exactlyOne: ['extra-flag', 'another-flag'],  // exactly one of these flags must be provided\r\n    relationships: [                             // define complex relationships between flags\r\n      // Make this flag dependent on all of these flags\r\n      {type: 'all', flags: ['flag-one', 'flag-two']}\r\n      // Make this flag dependent on at least one of these flags\r\n      {type: 'some', flags: ['flag-three', 'flag-four']}\r\n      // Make this flag exclusive of all these flags\r\n      {type: 'none', flags: ['flag-five', 'flag-six']}\r\n\r\n      // Make this flag dependent on all of these flags\r\n      {type: 'all', flags: [\r\n        'flag-one',\r\n        'flag-two',\r\n        // Include flag-seven but only when flag-eight is equal to FooBar\r\n        {name: 'flag-seven', when: async (flags) => flags['flag-eight'] === 'FooBar'}\r\n      ]}\r\n    ],\r\n    // The following properties cannot be set on boolean flags\r\n    helpValue: '<name>',                         // The flag value to show in help. Defaults to \"<value>\",\r\n    multipleNonGreedy: false,                    // Parse one value per flag to allow `-m val1 -m val2` but disallow `-m val1 val2`. Only respected if multiple is set to true\r\n    delimiter: ','                               // Delimiter to separate the values for a multiple value flag. Only respected if multiple is set to true. Default behavior is to separate on spaces.\r\n    allowStdin: false,                           // Allow input value to be read from stdin if the provided value is `-`. Can also be set to `only` to allow flag to always read from stdin even if no value is provided.\r\n  }),\r\n\r\n  // flag with no value (-f, --force)\r\n  force: Flags.boolean({\r\n    // Boolean flags take all the same properties described in the previous example\r\n    // in addition to:\r\n    allowNo: true // Support reversible boolean flag with `--no-` prefix (e.g. `--no-force`). This is disabled by default.\r\n  }),\r\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"\u81ea\u5b9a\u4e49\u6807\u5fd7",children:"\u81ea\u5b9a\u4e49\u6807\u5fd7"}),"\n",(0,l.jsx)(n.p,{children:"\u5bf9\u4e8e\u8f83\u5927\u7684 CLI\uff0c\u58f0\u660e\u53ef\u5728\u591a\u4e2a\u547d\u4ee4\u4e4b\u95f4\u5171\u4eab\u7684\u81ea\u5b9a\u4e49\u6807\u5fd7\u53ef\u80fd\u5f88\u6709\u7528\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6807\u5fd7\u7684\u793a\u4f8b\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// src/flags.ts\r\nimport {Flags} from '@oclif/core'\r\n\r\nclass Team {\r\n  public name: string;\r\n  // etc...\r\n}\r\n\r\nfunction getTeam(): Promise<Team> {\r\n  // imagine this reads a configuration file or something to find the team\r\n  return new Team()\r\n}\r\n\r\nexport const team = Flags.custom<Team>({\r\n  char: 't',\r\n  description: 'team to use',\r\n  default: async () => getTeam(),\r\n})\r\n\r\n// src/commands/mycommand.ts\r\nimport {team} from '../flags'\r\nimport {Command} from '@oclif/core'\r\n\r\nexport class MyCLI extends Command {\r\n  static flags = {\r\n    team: team({\r\n      required: true,\r\n    }),\r\n  }\r\n\r\n  async run() {\r\n    const {flags} = await this.parse(MyCLI)\r\n    if (flags.team) console.log(`--team is ${flags.team.name}`)\r\n  }\r\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u5728 Salesforce CLI \u4e2d\uff0c\u6211\u4eec\u5927\u91cf\u4f7f\u7528\u81ea\u5b9a\u4e49\u6807\u5fd7\u3002\u6bd4\u5982\u8bf4\uff0c"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://salesforcecli.github.io/sf-plugins-core/functions/flags_salesforceId.salesforceIdFlag.html",children:(0,l.jsx)(n.code,{children:"salesforceId"})})," \u6807\u5fd7\uff0c\u786e\u4fdd\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u662f\u6709\u6548\u7684 Salesforce ID\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://salesforcecli.github.io/sf-plugins-core/functions/flags_duration.durationFlag.html",children:(0,l.jsx)(n.code,{children:"duration"})})," \u6807\u5fd7\uff0c\u5b83\u5c06\u63d0\u4f9b\u7684\u6574\u6570\u8f6c\u6362\u4e3a\u6211\u4eec\u7528\u4e8e\u5904\u7406\u57fa\u4e8e\u65f6\u95f4\u7684\u503c\u7684 ",(0,l.jsx)(n.code,{children:"Duration"})," \u5b9e\u4f8b\u3002"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["\u5982\u679c\u4f60\u60f3\u770b\u66f4\u591a\u7684\u793a\u4f8b\uff0c\u901a\u8fc7",(0,l.jsx)(n.a,{href:"https://github.com/salesforcecli/sf-plugins-core/tree/main/src/flags",children:"\u8fd9\u91cc"}),"\u67e5\u770b\u3002\u4f60\u4e5f\u53ef\u4ee5\u9605\u8bfb ",(0,l.jsx)(n.a,{href:"https://salesforcecli.github.io/sf-plugins-core/",children:"API \u6587\u6863"}),"\u3002"]}),"\n",(0,l.jsx)(n.h2,{id:"\u53ef\u9009\u6807\u5fd7\u8f93\u5165",children:"\u53ef\u9009\u6807\u5fd7\u8f93\u5165"}),"\n",(0,l.jsxs)(n.p,{children:["\u4e0b\u9762\u662f\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8f93\u5165\u6807\u5fd7\u7684\u4e00\u4e9b\u5176\u4ed6\u65b9\u5f0f\u3002\u8fd9\u662f\u5047\u8bbe\u547d\u4ee4\u6709\u50cf ",(0,l.jsx)(n.code,{children:"-f, --file=file"})," \u548c ",(0,l.jsx)(n.code,{children:"-v, --verbose"})," \u8fd9\u6837\u7684\u6807\u5fd7\uff08\u5b57\u7b26\u4e32\u548c\u5e03\u5c14\u6807\u5fd7\uff09\uff1a"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh-session",children:"$ mycli --verbose\r\n$ mycli -v\r\n$ mycli --file=foo\r\n$ mycli --file foo\r\n$ mycli -f foo\r\n$ mycli -f=foo\r\n$ mycli -ffoo\r\n$ mycli -vffoo\n"})}),"\n",(0,l.jsxs)(n.p,{children:["\u6700\u540e\u4e00\u4e2a\u4e4d\u4e00\u770b\u4f3c\u4e4e\u6709\u70b9\u5947\u602a\uff0c\u4f46\u5b83\u5728 unix \u4e2d\u662f\u76f8\u5bf9\u6807\u51c6\u7684\uff0c\u5e76\u4f7f\u50cf ",(0,l.jsx)(n.code,{children:"tar -xvzfmytarball.tar.gz"})," \u8fd9\u6837\u7684\u547d\u4ee4\u6210\u4e3a\u53ef\u80fd\u3002"]}),"\n",(0,l.jsxs)(n.p,{children:["\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u535a\u5ba2\u6587\u7ae0 ",(0,l.jsx)(n.a,{href:"../blog/2019/02/20/cli-flags-explained",children:"CLI Flags Explained"}),"\uff0c\u4ee5\u6df1\u5165\u4e86\u89e3 CLI \u6807\u5fd7\u3002"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(f,{...e})}):f(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var l=r(6540);const a={},s=l.createContext(a);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);