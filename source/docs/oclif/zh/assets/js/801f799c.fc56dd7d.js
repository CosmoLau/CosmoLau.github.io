"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6238],{4223:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>t});var s=n(4848),o=n(8453);const i={title:"\u6027\u80fd"},l=void 0,c={id:"performance",title:"\u6027\u80fd",description:"oclif \u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684\u6027\u80fd\u8ddf\u8e2a \u2014\u2014 \u5bf9 oclif \u548c\u4f60\u81ea\u5df1\u7684\u4ee3\u7801\u90fd\u662f\u5982\u6b64\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u6765\u542f\u7528\u5b83\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u5982\u4f55\u5b9e\u73b0 bin \u811a\u672c\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/performance.md",sourceDirName:".",slug:"/performance",permalink:"/docs/oclif/zh/docs/performance",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/performance.md",tags:[],version:"current",lastUpdatedBy:"CosmoLau",lastUpdatedAt:1715497061e3,frontMatter:{title:"\u6027\u80fd"},sidebar:"docs",previous:{title:"\u5e2e\u52a9\u7c7b",permalink:"/docs/oclif/zh/docs/help_classes"},next:{title:"\u547d\u4ee4\u6267\u884c",permalink:"/docs/oclif/zh/docs/command_execution"}},a={},t=[{value:"\u5982\u4f55\u542f\u7528",id:"\u5982\u4f55\u542f\u7528",level:2},{value:"\u8bbf\u95ee oclif \u7279\u6709\u7684\u6027\u80fd\u6307\u6807",id:"\u8bbf\u95ee-oclif-\u7279\u6709\u7684\u6027\u80fd\u6307\u6807",level:2},{value:"\u5bf9\u4f60\u7684\u4ee3\u7801\u4f7f\u7528 <code>Performance</code>",id:"\u5bf9\u4f60\u7684\u4ee3\u7801\u4f7f\u7528-performance",level:2}];function f(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"oclif \u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684\u6027\u80fd\u8ddf\u8e2a \u2014\u2014 \u5bf9 oclif \u548c\u4f60\u81ea\u5df1\u7684\u4ee3\u7801\u90fd\u662f\u5982\u6b64\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u6765\u542f\u7528\u5b83\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u5982\u4f55\u5b9e\u73b0 bin \u811a\u672c\u3002"}),"\n",(0,s.jsxs)(r.p,{children:["\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u6765\u81ea\u751f\u6210\u5668\u7684 bin \u811a\u672c\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u5728 ",(0,s.jsx)(r.code,{children:"settings"})," \u6a21\u5757\u4e0a\u8bbe\u7f6e ",(0,s.jsx)(r.code,{children:"performanceEnabled"}),"\uff1a"]}),"\n",(0,s.jsx)(r.h2,{id:"\u5982\u4f55\u542f\u7528",children:"\u5982\u4f55\u542f\u7528"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"#!/usr/bin/env node\r\n\r\nimport {execute, settings} from '@oclif/core'\r\nsettings.performanceEnabled = true\r\nawait execute({dir: import.meta.url})\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 ",(0,s.jsx)(r.code,{children:"Config"})," \u7c7b\u4e0a\u542f\u7528\u5b83\uff0c\u5982\u679c\u8fd9\u6837\u5bf9\u4f60\u7684 CLI \u66f4\u597d\u7684\u8bdd\uff1a"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"import {Config, run} from '@oclif/core'\r\nimport {fileUrlToPath} from 'node:url'\r\n\r\nconst config = await Config.load({\r\n  root: resolve(fileURLToPath(import.meta.url), '..');,\r\n  enablePerf: true\r\n})\r\n\r\nawait run(config)\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u8bbf\u95ee-oclif-\u7279\u6709\u7684\u6027\u80fd\u6307\u6807",children:"\u8bbf\u95ee oclif \u7279\u6709\u7684\u6027\u80fd\u6307\u6807"}),"\n",(0,s.jsxs)(r.p,{children:["\u542f\u7528\u6027\u80fd\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 ",(0,s.jsx)(r.code,{children:"oclif-perf"})," \u8303\u56f4\u4e0b\u7684\u8c03\u8bd5\u8f93\u51fa\u4e2d\u770b\u5230\u3002"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"\u276f DEBUG=oclif-perf sf version\r\n@salesforce/cli/2.35.6 darwin-arm64 node-v20.11.0\r\n  oclif-perf Process Uptime: 747.6823ms +0ms\r\n  oclif-perf Oclif Time: 302.1286ms +0ms\r\n  oclif-perf Init Time: 37.7735ms +0ms\r\n  oclif-perf Config Load Time: 294.5321ms +0ms\r\n  oclif-perf   \u2022 Root Plugin Load Time: 11.2781ms +0ms\r\n  oclif-perf   \u2022 Plugins Load Time: 274.6006ms +0ms\r\n  oclif-perf   \u2022 Commands Load Time: 6.7736ms +0ms\r\n  oclif-perf Core Plugin Load Time: 20.9403ms +0ms\r\n  oclif-perf User Plugin Load Time: 0.0000ms +0ms\r\n  oclif-perf Linked Plugin Load Time: 2.3124ms +0ms\r\n  oclif-perf Plugin Load Times: +0ms\r\n  oclif-perf   oclif-hello-world: 239.1951ms (no manifest!) +0ms\r\n  oclif-perf   @oclif/plugin-update: 18.8549ms +0ms\r\n  oclif-perf   @oclif/plugin-autocomplete: 17.5277ms +0ms\r\n  oclif-perf   @oclif/plugin-commands: 16.4917ms +0ms\r\n  oclif-perf   @oclif/plugin-not-found: 16.3310ms +0ms\r\n  oclif-perf   @oclif/plugin-search: 15.8846ms +0ms\r\n  oclif-perf   @oclif/plugin-version: 14.8063ms +0ms\r\n  oclif-perf   @salesforce/plugin-org: 14.5657ms +0ms\r\n  oclif-perf   @salesforce/plugin-data: 14.3991ms +0ms\r\n  oclif-perf   @oclif/plugin-warn-if-update-available: 14.3733ms +0ms\r\n  oclif-perf   @oclif/plugin-which: 14.1629ms +0ms\r\n  oclif-perf   @salesforce/plugin-apex: 13.9885ms +0ms\r\n  oclif-perf   @salesforce/plugin-auth: 13.6895ms +0ms\r\n  oclif-perf   @salesforce/plugin-deploy-retrieve: 13.6353ms +0ms\r\n  oclif-perf   @salesforce/plugin-limits: 13.1123ms +0ms\r\n  oclif-perf   @salesforce/plugin-packaging: 12.9777ms +0ms\r\n  oclif-perf   @salesforce/plugin-info: 12.7787ms +0ms\r\n  oclif-perf   @salesforce/plugin-marketplace: 12.1542ms +0ms\r\n  oclif-perf   @salesforce/plugin-source: 11.9480ms +0ms\r\n  oclif-perf   @salesforce/plugin-schema: 11.7775ms +0ms\r\n  oclif-perf   @salesforce/plugin-settings: 11.4785ms +0ms\r\n  oclif-perf   @salesforce/plugin-templates: 11.4225ms +0ms\r\n  oclif-perf   @salesforce/plugin-sobject: 11.3670ms +0ms\r\n  oclif-perf   root: 11.2781ms +0ms\r\n  oclif-perf   @salesforce/plugin-user: 10.8521ms +0ms\r\n  oclif-perf   @salesforce/plugin-telemetry: 10.5724ms +1ms\r\n  oclif-perf   @salesforce/plugin-trust: 10.4463ms +0ms\r\n  oclif-perf   @oclif/plugin-plugins: 2.0135ms +0ms\r\n  oclif-perf   @oclif/plugin-help: 1.9039ms +0ms\r\n  oclif-perf Hook Run Times: +0ms\r\n  oclif-perf   init: +0ms\r\n  oclif-perf     total: 37.4624ms +0ms\r\n  oclif-perf     oclif-hello-world(./dist/hooks/init/init): 7.9818ms +0ms\r\n  oclif-perf     @oclif/plugin-warn-if-update-available(./lib/hooks/init/check-update): 37.1145ms +0ms\r\n  oclif-perf     @salesforce/plugin-settings(./lib/hooks/init/load_config_meta): 29.3073ms +0ms\r\n  oclif-perf     @oclif/plugin-update(./dist/hooks/init.js): 33.1767ms +0ms\r\n  oclif-perf   prerun: +0ms\r\n  oclif-perf     total: 260.5702ms +0ms\r\n  oclif-perf     @salesforce/cli(./dist/hooks/prerun): 2.3582ms +0ms\r\n  oclif-perf     @salesforce/plugin-telemetry(./lib/hooks/telemetryPrerun.js): 260.2634ms +0ms\r\n  oclif-perf   preparse: +0ms\r\n  oclif-perf     total: 0.5351ms +0ms\r\n  oclif-perf     @salesforce/cli(/dist/hooks/preparse): 0.5045ms +0ms\r\n  oclif-perf   postrun: +0ms\r\n  oclif-perf     total: 0.3507ms +0ms\r\n  oclif-perf Command Load Time: 0.7478ms +0ms\r\n  oclif-perf Command Run Time: 264.2587ms +0ms\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u4f60\u4e5f\u53ef\u4ee5\u50cf\u8fd9\u6837\u901a\u8fc7\u7f16\u7a0b\u5f62\u5f0f\u8bbf\u95ee\u8fd9\u4e9b\u6307\u6807\uff1a\r\nYou can also access these metrics programmatically like so:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"const {Performance, flush, handle, run, settings} = await import('@oclif/core')\r\nsettings.performanceEnabled = true\r\nawait run(process.argv.slice(2))\r\n  .catch(async (error) => handle(error))\r\n  .finally(async () => {\r\n    console.log('Performance', Performance.oclifPerf)\r\n    await flush()\r\n  })\n"})}),"\n",(0,s.jsxs)(r.h2,{id:"\u5bf9\u4f60\u7684\u4ee3\u7801\u4f7f\u7528-performance",children:["\u5bf9\u4f60\u7684\u4ee3\u7801\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"Performance"})]}),"\n",(0,s.jsxs)(r.p,{children:["\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"Performance"})," \u7c7b\u6765\u6355\u83b7\u4f60\u81ea\u5df1\u7684\u4ee3\u7801\u5e93\u4e0a\u7684\u6027\u80fd\u6307\u6807\u3002"]}),"\n",(0,s.jsxs)(r.p,{children:["\u8981\u6355\u83b7\u4ee3\u7801\u5757\u7684\u6027\u80fd\u6307\u6807\uff0c\u4f60\u9700\u8981\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"Performance.mark"})," \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 ",(0,s.jsx)(r.code,{children:"marker"}),"\u3002\u7136\u540e\uff0c\u4f60\u9700\u8981\u8c03\u7528 ",(0,s.jsx)(r.code,{children:".stop"})," \u65b9\u6cd5 ",(0,s.jsx)(r.code,{children:"marker"})," \u6765\u5b8c\u6210\u4ee3\u7801\u5757\u7684\u8ba1\u65f6\u3002"]}),"\n",(0,s.jsx)(r.p,{children:"\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"import {Performance} from '@oclif/core'\r\n// Create a new marker.\r\n// First argument is the owner of the marker (This allows Performance to be able to distinguish the origin of each marker)\r\n// Second argument is the name of the maker. Naming convention that oclif uses internally is <module>.<method>#scope. You are free, however, to name these however you like.\r\nconst marker = Performance.mark('my-plugin', 'hello.run')\r\n\r\n// do things that take a while.\r\n\r\n// Add details to the marker that you might want to access later\r\nmarker?.addDetails({from: flags.from, person: args.person})\r\n// Stop the marker. This will capture the amount of time between the creation of the marker and the stopping of the marker.\r\nmarker?.stop()\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u8fd8\u6709\u4e00\u4e2a\u66f4\u5f7b\u5e95\u7684\u4f8b\u5b50\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"// ./src/commands/hello/index.ts\r\nimport {Args, Command, Flags, Performance} from '@oclif/core'\r\n\r\nexport default class Hello extends Command {\r\n  static args = {\r\n    person: Args.string({description: 'Person to say hello to', required: true}),\r\n  }\r\n\r\n  static flags = {\r\n    from: Flags.string({char: 'f', description: 'Who is saying hello', required: true}),\r\n  }\r\n\r\n  async run(): Promise<void> {\r\n    const {args, flags} = await this.parse(Hello)\r\n    const marker = Performance.mark('my-plugin', 'hello.run')\r\n    await new Promise((resolve) => {\r\n      setTimeout(resolve, 1000)\r\n    })\r\n    marker?.addDetails({from: flags.from, person: args.person})\r\n    marker?.stop()\r\n    this.log(`hello ${args.person} from ${flags.from}! (./src/commands/hello/index.ts)`)\r\n  }\r\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["\u4f60\u521b\u5efa\u7684\u6240\u6709 maker \u90fd\u53ef\u4ee5\u5728 ",(0,s.jsx)(r.code,{children:"Performance"})," \u4e0a\u7684\u9759\u6001 ",(0,s.jsx)(r.code,{children:"results"})," \u5c5e\u6027\u4e0a\u8bbf\u95ee\uff1a"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"// bin/run.js\r\nconst {Performance, flush, handle, run, settings} = await import('@oclif/core')\r\nsettings.performanceEnabled = true\r\nawait run(process.argv.slice(2))\r\n  .catch(async (error) => handle(error))\r\n  .finally(async () => {\r\n    console.log('Results', Performance.results)\r\n    await flush()\r\n  })\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"\u276f bin/run.js hello reader --from oclif\r\nhello reader from oclif! (./src/commands/hello/index.ts)\r\nResults Map(1) {\r\n  'my-plugin' => [\r\n    {\r\n      details: {\r\n        from: oclif,\r\n        person: reader\r\n      },\r\n      duration: 1003.4971249999999,\r\n      method: 'run',\r\n      module: 'hello',\r\n      name: 'hello.run',\r\n      scope: undefined\r\n    }\r\n  ]\r\n}\n"})})]})}function m(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var s=n(6540);const o={},i=s.createContext(o);function l(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);